// Mocks generated by Mockito 5.4.4 from annotations
// in tv/test/presentation/bloc/tv_detail_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:core/common/failure.dart' as _i6;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tv/domain/entities/tv_detail_entities.dart' as _i7;
import 'package:tv/domain/entities/tv_entities.dart' as _i9;
import 'package:tv/domain/repositories/tv_repositories.dart' as _i2;
import 'package:tv/domain/usecases/get_tv_detail.dart' as _i4;
import 'package:tv/domain/usecases/get_tv_recommendations.dart' as _i8;
import 'package:tv/domain/usecases/get_watchlist_tv_status.dart' as _i10;
import 'package:tv/domain/usecases/remove_watchlist_tv.dart' as _i12;
import 'package:tv/domain/usecases/save_watchlist_tv.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTvRepositories_0 extends _i1.SmartFake
    implements _i2.TvRepositories {
  _FakeTvRepositories_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetTvDetailUsecases].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvDetailUsecases extends _i1.Mock
    implements _i4.GetTvDetailUsecases {
  MockGetTvDetailUsecases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepositories get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepositories_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvRepositories);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.TvDetailEntities>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i7.TvDetailEntities>>.value(
                _FakeEither_1<_i6.Failure, _i7.TvDetailEntities>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.TvDetailEntities>>);
}

/// A class which mocks [GetTvRecommendationsUsecases].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvRecommendationsUsecases extends _i1.Mock
    implements _i8.GetTvRecommendationsUsecases {
  MockGetTvRecommendationsUsecases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepositories get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepositories_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvRepositories);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i9.TvEntities>>> execute(
          dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i9.TvEntities>>>.value(
                _FakeEither_1<_i6.Failure, List<_i9.TvEntities>>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i9.TvEntities>>>);
}

/// A class which mocks [GetWatchlistTvStatusUsecases].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistTvStatusUsecases extends _i1.Mock
    implements _i10.GetWatchlistTvStatusUsecases {
  MockGetWatchlistTvStatusUsecases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepositories get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepositories_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvRepositories);

  @override
  _i5.Future<bool> execute(int? id) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [SaveWatchlistTvUsecases].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistTvUsecases extends _i1.Mock
    implements _i11.SaveWatchlistTvUsecases {
  MockSaveWatchlistTvUsecases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepositories get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepositories_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvRepositories);

  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(
          _i7.TvDetailEntities? tvDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [tvDetail],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, String>>.value(
            _FakeEither_1<_i6.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [tvDetail],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, String>>);
}

/// A class which mocks [RemoveWatchlistTvUsecases].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistTvUsecases extends _i1.Mock
    implements _i12.RemoveWatchlistTvUsecases {
  MockRemoveWatchlistTvUsecases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepositories get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepositories_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvRepositories);

  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(
          _i7.TvDetailEntities? tvDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [tvDetail],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, String>>.value(
            _FakeEither_1<_i6.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [tvDetail],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, String>>);
}
